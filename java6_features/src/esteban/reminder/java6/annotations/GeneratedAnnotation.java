package esteban.reminder.java6.annotations;

import javax.annotation.Generated;

/**
 * The aim of having Common Annotations API in the Java Platform is to avoid applications defining their own Annotations
 * which will result in having larger number of Duplicates. This JSR is targeted to cover Annotations both in the
 * Standard as well the Enterprise Environments.
 * 
 * The packages that contain the annotations are javax.annotation and javax.annotation.security.
 * 
 * @Generate Annotation
 * Not all the source files or the source code in an application is hand-written by Developers. With the increasing
 * number of Tools and Frameworks, most of the common Boiler-Plate Code is generated by the Tools or the Frameworks
 * themselves if they have been properly instructed. Such Tool Generated Code can be marked with @Generated Annotation.
 * 
 * The value for the @Generated Annotation MUST have the class name that generated this code; in the documentation
 * 'value' is an array of strings (String[]). Optionally, comments and date can be given to add more clarity to the
 * generated code.
 * 
 * Note this @Generated Annotation is not limited to a method definition, it can also be defined for Package
 * Declaration, Class Declaration, Interface Declaration, Local Variable Declaration, Field Declaration, Parameter
 * Declaration etc.
 * 
 * @see http://docs.oracle.com/javase/6/docs/api/javax/annotation/Generated.html
 * @see 
 *
 * @author estebangm
 */
public class GeneratedAnnotation {

	public void developerCode(){
		// Code written by developers
    }

    @Generated(
        value = "ClassNameThatGeneratedThisCode",
        comments = "This is Tool Generated Code",
        date = "16/03/2016"
    )

    public void toolGeneratedCode(){
    	// Code generated by a tool or framework by using the information provided in 'Generated' annotation
    }
}
